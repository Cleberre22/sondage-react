{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import { useForm, Controller } from \"react-hook-form\";\n// import MenuHeader from \"../../../components/auth/MenuHeader\";\n// import Avatar from \"@mui/material/Avatar\";\n// import Button from \"@mui/material/Button\";\n// import CssBaseline from \"@mui/material/CssBaseline\";\n// import TextField from \"@mui/material/TextField\";\n// import Box from \"@mui/material/Box\";\n// import PollIcon from \"@mui/icons-material/Poll\";\n// import Typography from \"@mui/material/Typography\";\n// import Container from \"@mui/material/Container\";\n// import { createTheme, ThemeProvider } from \"@mui/material/styles\";\n// const theme = createTheme();\n// export default function SignIn() {\n//   const navigate = useNavigate();\n//   const [nameQuestion, setNameQuestion] = useState(\"\");\n//   const [validationError, setValidationError] = useState({});\n//   //Fonction d'ajout d'une question\n//   const AddQuestion = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     formData.append(\"nameQuestion\", nameQuestion);\n//     await axios\n//       .post(`http://localhost:8000/api/questions`, formData)\n//       .then(navigate(\"/dashboard/questions\"))\n//       .catch(({ response }) => {\n//         if (response.status === 422) {\n//           setValidationError(response.data.errors);\n//         }\n//       });\n//   };\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     const data = new FormData(event.currentTarget);\n//     console.log({\n//       email: data.get(\"email\"),\n//       password: data.get(\"password\"),\n//     });\n//   };\n//   return (\n//     <div>\n//       <MenuHeader />\n//       <ThemeProvider theme={theme}>\n//         <Container component=\"main\" maxWidth=\"xs\">\n//           <CssBaseline />\n//           <Box\n//             sx={{\n//               marginTop: 18,\n//               display: \"flex\",\n//               justifyContent: \"center\",\n//               flexDirection: \"column\",\n//               alignItems: \"center\",\n//             }}\n//           >\n//             {Object.keys(validationError).length > 0 && (\n//               <div className=\"row\">\n//                 <div className=\"col-12\">\n//                   <div className=\"alert alert-danger\">\n//                     <ul className=\"mb-0\">\n//                       {Object.entries(validationError).map(([key, value]) => (\n//                         <li key={key}>{value}</li>\n//                       ))}\n//                     </ul>\n//                   </div>\n//                 </div>\n//               </div>\n//             )}\n//             <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n//               <PollIcon />\n//             </Avatar>\n//             <Typography sx={{ mt: 0 }} component=\"h1\" variant=\"h4\">\n//               Créer un sondage\n//             </Typography>\n//             <Box component=\"form\" onSubmit={AddPoll} noValidate sx={{ mt: 3 }}>\n//               <TextField\n//                 margin=\"normal\"\n//                 required\n//                 fullWidth\n//                 id=\"email\"\n//                 label=\"Nom du sondage\"\n//                 name=\"nameSondage\"\n//                 autoComplete=\"email\"\n//                 autoFocus\n//                 type=\"text\"\n//                 value={nameSondage}\n//                 onChange={(event) => {\n//                   setNameSondage(event.target.value);\n//                 }}\n//               />\n//               <Button\n//                 type=\"submit\"\n//                 fullWidth\n//                 variant=\"contained\"\n//                 sx={{ mt: 2, mb: 2 }}\n//               >\n//                 Ajouter\n//               </Button>\n//             </Box>\n//           </Box>\n//         </Container>\n//       </ThemeProvider>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/wamp64/www/sondage-react/src/pages/dashboard/questions/AddQuestion.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import { useForm, Controller } from \"react-hook-form\";\r\n// import MenuHeader from \"../../../components/auth/MenuHeader\";\r\n\r\n// import Avatar from \"@mui/material/Avatar\";\r\n// import Button from \"@mui/material/Button\";\r\n// import CssBaseline from \"@mui/material/CssBaseline\";\r\n// import TextField from \"@mui/material/TextField\";\r\n// import Box from \"@mui/material/Box\";\r\n// import PollIcon from \"@mui/icons-material/Poll\";\r\n// import Typography from \"@mui/material/Typography\";\r\n// import Container from \"@mui/material/Container\";\r\n// import { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n\r\n// const theme = createTheme();\r\n\r\n// export default function SignIn() {\r\n//   const navigate = useNavigate();\r\n\r\n//   const [nameQuestion, setNameQuestion] = useState(\"\");\r\n//   const [validationError, setValidationError] = useState({});\r\n\r\n//   //Fonction d'ajout d'une question\r\n//   const AddQuestion = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const formData = new FormData();\r\n\r\n//     formData.append(\"nameQuestion\", nameQuestion);\r\n\r\n//     await axios\r\n//       .post(`http://localhost:8000/api/questions`, formData)\r\n//       .then(navigate(\"/dashboard/questions\"))\r\n//       .catch(({ response }) => {\r\n//         if (response.status === 422) {\r\n//           setValidationError(response.data.errors);\r\n//         }\r\n//       });\r\n//   };\r\n\r\n//   const handleSubmit = (event) => {\r\n//     event.preventDefault();\r\n//     const data = new FormData(event.currentTarget);\r\n//     console.log({\r\n//       email: data.get(\"email\"),\r\n//       password: data.get(\"password\"),\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <MenuHeader />\r\n\r\n//       <ThemeProvider theme={theme}>\r\n//         <Container component=\"main\" maxWidth=\"xs\">\r\n//           <CssBaseline />\r\n//           <Box\r\n//             sx={{\r\n//               marginTop: 18,\r\n//               display: \"flex\",\r\n//               justifyContent: \"center\",\r\n//               flexDirection: \"column\",\r\n//               alignItems: \"center\",\r\n//             }}\r\n//           >\r\n//             {Object.keys(validationError).length > 0 && (\r\n//               <div className=\"row\">\r\n//                 <div className=\"col-12\">\r\n//                   <div className=\"alert alert-danger\">\r\n//                     <ul className=\"mb-0\">\r\n//                       {Object.entries(validationError).map(([key, value]) => (\r\n//                         <li key={key}>{value}</li>\r\n//                       ))}\r\n//                     </ul>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n\r\n//             <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n//               <PollIcon />\r\n//             </Avatar>\r\n//             <Typography sx={{ mt: 0 }} component=\"h1\" variant=\"h4\">\r\n//               Créer un sondage\r\n//             </Typography>\r\n//             <Box component=\"form\" onSubmit={AddPoll} noValidate sx={{ mt: 3 }}>\r\n//               <TextField\r\n//                 margin=\"normal\"\r\n//                 required\r\n//                 fullWidth\r\n//                 id=\"email\"\r\n//                 label=\"Nom du sondage\"\r\n//                 name=\"nameSondage\"\r\n//                 autoComplete=\"email\"\r\n//                 autoFocus\r\n//                 type=\"text\"\r\n//                 value={nameSondage}\r\n//                 onChange={(event) => {\r\n//                   setNameSondage(event.target.value);\r\n//                 }}\r\n//               />\r\n\r\n//               <Button\r\n//                 type=\"submit\"\r\n//                 fullWidth\r\n//                 variant=\"contained\"\r\n//                 sx={{ mt: 2, mb: 2 }}\r\n//               >\r\n//                 Ajouter\r\n//               </Button>\r\n//             </Box>\r\n//           </Box>\r\n//         </Container>\r\n//       </ThemeProvider>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}