{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\sondage-react\\\\src\\\\pages\\\\dashboard\\\\questions\\\\ShowQuestion.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport MenuHeader from \"../../../components/auth/MenuHeader\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport PollIcon from \"@mui/icons-material/Poll\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\nexport default function ShowPoll() {\n  _s();\n\n  const {\n    poll\n  } = useParams();\n  const {\n    question\n  } = useParams();\n  const navigate = useNavigate();\n  const [nameSondage, setNameSondage] = useState(\"\");\n  const [nameQuestion, setNameQuestion] = useState(\"\");\n  const [polls_id, setPolls_id] = useState(\"\");\n  const [polls, setPolls] = useState([]);\n  const [questions_id, setQuestions_id] = useState(\"\");\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    // getPoll();\n    getQuestion();\n  }, []); // // GET - Récupère les valeurs de la fiche avec l'API\n  // const getPoll = async () => {\n  //   await axios\n  //     .get(`http://localhost:8000/api/polls/${poll}`)\n  //     .then((res) => {\n  //       setNameSondage(res.data[0].nameSondage);\n  //       console.log(res.data[0]);\n  //     })\n  //     .catch((error) => {\n  //       // console.log(error);\n  //     });\n  // };\n  // GET - Récupère les valeurs de la fiche avec l'API\n\n  const getQuestion = async () => {\n    await axios.get(`http://localhost:8000/api/questions/${question}`).then(res => {\n      setQuestion(res.data[0].question);\n      setQuestion(res.data[0].question);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MenuHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 18,\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              m: 1,\n              bgcolor: \"secondary.main\"\n            },\n            children: /*#__PURE__*/_jsxDEV(PollIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 0\n            },\n            component: \"h1\",\n            variant: \"h4\",\n            children: \"Fiche de la question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"boxPoll\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [question.nameSondage, \"aaaaaaaaaa\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 51\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [question.nameQuestion, \"dddddddddd\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowPoll, \"Xi/C5tdOtyeiKaXutx2r/cKdD+M=\", false, function () {\n  return [useParams, useParams, useNavigate];\n});\n\n_c = ShowPoll;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowPoll\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","axios","useForm","Controller","MenuHeader","Avatar","Button","CssBaseline","TextField","Box","PollIcon","Typography","Container","createTheme","ThemeProvider","theme","ShowPoll","poll","question","navigate","nameSondage","setNameSondage","nameQuestion","setNameQuestion","polls_id","setPolls_id","polls","setPolls","questions_id","setQuestions_id","questions","setQuestions","getQuestion","get","then","res","setQuestion","data","catch","error","console","log","marginTop","display","justifyContent","flexDirection","alignItems","m","bgcolor","mt"],"sources":["C:/wamp64/www/sondage-react/src/pages/dashboard/questions/ShowQuestion.jsx"],"sourcesContent":["import React, { useState, useEffect  } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport MenuHeader from \"../../../components/auth/MenuHeader\";\r\n\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport PollIcon from \"@mui/icons-material/Poll\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function ShowPoll() {\r\n  const { poll } = useParams();\r\n  const { question } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [nameSondage, setNameSondage] = useState(\"\");\r\n  const [nameQuestion, setNameQuestion] = useState(\"\");\r\n  const [polls_id, setPolls_id] = useState(\"\");\r\n  const [polls, setPolls] = useState([]);\r\n  const [questions_id, setQuestions_id] = useState(\"\");\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // getPoll();\r\n    getQuestion();\r\n  }, []);\r\n\r\n  // // GET - Récupère les valeurs de la fiche avec l'API\r\n  // const getPoll = async () => {\r\n  //   await axios\r\n  //     .get(`http://localhost:8000/api/polls/${poll}`)\r\n  //     .then((res) => {\r\n  //       setNameSondage(res.data[0].nameSondage);\r\n  //       console.log(res.data[0]);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       // console.log(error);\r\n  //     });\r\n  // };\r\n\r\n    // GET - Récupère les valeurs de la fiche avec l'API\r\n    const getQuestion = async () => {\r\n      await axios\r\n        .get(`http://localhost:8000/api/questions/${question}`)\r\n        .then((res) => {\r\n          setQuestion(res.data[0].question);\r\n          setQuestion(res.data[0].question);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n        \r\n    };\r\n    \r\n  return (\r\n    <div>\r\n      <MenuHeader />\r\n\r\n      <ThemeProvider theme={theme}>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <Box\r\n            sx={{\r\n              marginTop: 18,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n\r\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n              <PollIcon />\r\n            </Avatar>\r\n            <Typography sx={{ mt: 0 }} component=\"h1\" variant=\"h4\">\r\n              Fiche de la question\r\n            </Typography>\r\n            <Box className=\"boxPoll\">\r\n           <p>{question.nameSondage}aaaaaaaaaa</p><br />\r\n           <p>{question.nameQuestion}dddddddddd</p>\r\n           </Box>\r\n          </Box>\r\n        </Container>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}